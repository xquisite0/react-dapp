{"ast":null,"code":"var _jsxFileName = \"/Users/zhouyuhang/projects/react-dapp/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useState } from 'react';\nimport { ethers } from 'ethers';\nimport Greeter from './artifacts/contracts/Greeter.sol/Greeter.json';\nimport Token from './artifacts/contracts/Token.sol/Token.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst greeterAddress = \"0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9\";\nconst tokenAddress = \"0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9\";\n\nfunction App() {\n  _s();\n\n  const [greeting, setGreetingValue] = useState();\n  const [userAccount, setUserAccount] = useState();\n  const [amount, setAmount] = useState();\n\n  async function requestAccount() {\n    await window.ethereum.request({\n      method: 'eth_requestAccounts'\n    });\n  }\n\n  async function fetchGreeting() {\n    if (typeof window.ethereum !== 'undefined') {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      console.log({\n        provider\n      });\n      const contract = new ethers.Contract(greeterAddress, Greeter.abi, provider);\n\n      try {\n        const data = await contract.greet();\n        console.log('data: ', data);\n      } catch (err) {\n        console.log(\"Error: \", err);\n      }\n    }\n  }\n\n  async function getBalance() {\n    if (typeof window.ethereum !== 'undefined') {\n      const [account] = await window.ethereum.request({\n        method: 'eth_requestAccounts'\n      });\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const contract = new ethers.Contract(tokenAddress, Token.abi, provider);\n      const balance = await contract.balanceOf(account);\n      console.log(\"Balance: \", balance.toString());\n    }\n  }\n\n  async function setGreeting() {\n    if (!greeting) return;\n\n    if (typeof window.ethereum !== 'undefined') {\n      await requestAccount();\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      console.log({\n        provider\n      });\n      const signer = provider.getSigner();\n      const contract = new ethers.Contract(greeterAddress, Greeter.abi, signer);\n      const transaction = await contract.setGreeting(greeting);\n      await transaction.wait();\n      fetchGreeting();\n    }\n  }\n\n  async function sendCoins() {\n    if (typeof window.ethereum !== 'undefined') {\n      await requestAccount();\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const contract = new ethers.Contract(tokenAddress, Token.abi, signer);\n      const transation = await contract.transfer(userAccount, amount);\n      await transation.wait();\n      console.log(`${amount} Coins successfully sent to ${userAccount}`);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchGreeting,\n        children: \"Fetch Greeting\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: setGreeting,\n        children: \"Set Greeting\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => setGreetingValue(e.target.value),\n        placeholder: \"Set greeting\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: getBalance,\n        children: \"Get Balance\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendCoins,\n        children: \"Send Coins\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => setUserAccount(e.target.value),\n        placeholder: \"Account ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => setAmount(e.target.value),\n        placeholder: \"Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"8jI9p0yD0bz3yP3ZBSGLtddmGeQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/zhouyuhang/projects/react-dapp/src/App.js"],"names":["useState","ethers","Greeter","Token","greeterAddress","tokenAddress","App","greeting","setGreetingValue","userAccount","setUserAccount","amount","setAmount","requestAccount","window","ethereum","request","method","fetchGreeting","provider","providers","Web3Provider","console","log","contract","Contract","abi","data","greet","err","getBalance","account","balance","balanceOf","toString","setGreeting","signer","getSigner","transaction","wait","sendCoins","transation","transfer","e","target","value"],"mappings":"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","sourcesContent":["import './App.css';\nimport { useState } from 'react';\nimport { ethers } from 'ethers'\nimport Greeter from './artifacts/contracts/Greeter.sol/Greeter.json'\nimport Token from './artifacts/contracts/Token.sol/Token.json'\n\nconst greeterAddress = \"0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9\"\nconst tokenAddress = \"0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9\"\n\nfunction App() {\n  const [greeting, setGreetingValue] = useState()\n  const [userAccount, setUserAccount] = useState()\n  const [amount, setAmount] = useState()\n\n  async function requestAccount() {\n    await window.ethereum.request({ method: 'eth_requestAccounts' });\n  }\n\n  async function fetchGreeting() {\n    if (typeof window.ethereum !== 'undefined') {\n      const provider = new ethers.providers.Web3Provider(window.ethereum)\n      console.log({ provider })\n      const contract = new ethers.Contract(greeterAddress, Greeter.abi, provider)\n      try {\n        const data = await contract.greet()\n        console.log('data: ', data)\n      } catch (err) {\n        console.log(\"Error: \", err)\n      }\n    }\n  }\n\n  async function getBalance() {\n    if (typeof window.ethereum !== 'undefined') {\n      const [account] = await window.ethereum.request({ method: 'eth_requestAccounts' })\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const contract = new ethers.Contract(tokenAddress, Token.abi, provider)\n      const balance = await contract.balanceOf(account);\n      console.log(\"Balance: \", balance.toString());\n    }\n  }\n\n  async function setGreeting() {\n    if (!greeting) return\n    if (typeof window.ethereum !== 'undefined') {\n      await requestAccount()\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      console.log({ provider })\n      const signer = provider.getSigner()\n      const contract = new ethers.Contract(greeterAddress, Greeter.abi, signer)\n      const transaction = await contract.setGreeting(greeting)\n      await transaction.wait()\n      fetchGreeting()\n    }\n  }\n\n  async function sendCoins() {\n    if (typeof window.ethereum !== 'undefined') {\n      await requestAccount()\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const contract = new ethers.Contract(tokenAddress, Token.abi, signer);\n      const transation = await contract.transfer(userAccount, amount);\n      await transation.wait();\n      console.log(`${amount} Coins successfully sent to ${userAccount}`);\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <button onClick={fetchGreeting}>Fetch Greeting</button>\n        <button onClick={setGreeting}>Set Greeting</button>\n        <input onChange={e => setGreetingValue(e.target.value)} placeholder=\"Set greeting\" />\n\n        <br />\n        <button onClick={getBalance}>Get Balance</button>\n        <button onClick={sendCoins}>Send Coins</button>\n        <input onChange={e => setUserAccount(e.target.value)} placeholder=\"Account ID\" />\n        <input onChange={e => setAmount(e.target.value)} placeholder=\"Amount\" />\n      </header>\n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}